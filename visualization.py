# The following packages are used only for visualization purpose
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns
from sklearn.preprocessing import StandardScaler 
from sklearn.manifold import TSNE

def visualization():

    # The path and file name should be changed depending on the model you choose
    df = pd.read_csv('/Users/wangweiran/Desktop/CS433-Machine Learning/EPFL_ML_Project/visualization csv/least-squares-SGD-visualization.csv')
    # df = pd.read_csv('/Users/wangweiran/Desktop/CS433-Machine Learning/EPFL_ML_Project/train-visualization.csv')
    np.random.seed(1)
    # df = np.random.permutation(df.shape[0])
    df = df[:10000]
    
    df.head()
    X = df.drop('Prediction', axis=1)
    y = df['Prediction']
    # y = y.map({'s':'signal', 'b':'background'})
    y = y.map({1:'signal', -1:'background'})

    cat_cols = X.select_dtypes(include='number').columns.tolist()
    for col in cat_cols: 
        print(f'col name : {col}, N Unique : {X[col].nunique()}')

    for col in cat_cols:
        X[col] = X[col].astype('category')
        X[col] = X[col].cat.codes
    X.head()
    
    tsne = TSNE(n_components=2)
    #X_std = StandardScaler().fit_transform(X)
    X_tsne = tsne.fit_transform(X)
    X_tsne_data = np.vstack((X_tsne.T, y)).T
    df_tsne = pd.DataFrame(X_tsne_data, columns=['Dim1 generated by TSNE', 'Dim2 generated by TSNE', 'Prediction']) 
    df_tsne.head()
    plt.figure(figsize=(8, 8)) 
    sns.scatterplot(data=df_tsne, hue='Prediction', x='Dim1 generated by TSNE', y='Dim2 generated by TSNE')
    #sns.scatterplot(data=df_tsne, hue='Prediction', x='Dim1 generated by TSNE', y='Dim2 generated by TSNE', palette=['orange', 'blue']) 
    plt.show()

visualization()